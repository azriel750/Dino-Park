CREATE TABLE IF NOT EXISTS publisher (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name TEXT NOT NULL
);
CREATE TABLE IF NOT EXISTS author (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    first_name TEXT NOT NULL,
    last_name TEXT NOT NULL
);
CREATE TABLE IF NOT EXISTS category (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name TEXT NOT NULL UNIQUE
);
CREATE TABLE IF NOT EXISTS book (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    title TEXT NOT NULL,
    publisher_id INT REFERENCES publisher(id),
    category_id INT REFERENCES category(id),
    publication_year INT
);
CREATE TABLE IF NOT EXISTS book_author (
    book_id INT NOT NULL REFERENCES book(id),
    author_id INT NOT NULL REFERENCES author(id),
    PRIMARY KEY (book_id, author_id)
);
INSERT INTO category (name)
VALUES ('Informatique'),
    ('Fantasy'),
    ('Dystopie'),
    ('Classique'),
    ('Algorithmique');
INSERT INTO publisher (name)
VALUES ('O''Reilly Media'),
    ('No Starch Press'),
    ('Gallimard'),
    ('Hachette'),
    ('Penguin Random House'),
    ('Addison-Wesley'),
    ('MIT Press');
INSERT INTO author (first_name, last_name)
VALUES ('Martin', 'Kleppmann'),
    ('Al', 'Sweigart'),
    ('Marijn', 'Haverbeke'),
    ('J.R.R.', 'Tolkien'),
    ('George', 'Orwell'),
    ('Victor', 'Hugo'),
    ('Andrew', 'Hunt'),
    ('David', 'Thomas'),
    ('Robert C.', 'Martin');
INSERT INTO book (
        title,
        publisher_id,
        category_id,
        publication_year
    )
VALUES (
        'Designing Data-Intensive Applications',
        (
            SELECT id
            FROM publisher
            WHERE name = 'O''Reilly Media'
        ),
        (
            SELECT id
            FROM category
            WHERE name = 'Informatique'
        ),
        2017
    ),
    (
        'Automate the Boring Stuff with Python',
        (
            SELECT id
            FROM publisher
            WHERE name = 'No Starch Press'
        ),
        (
            SELECT id
            FROM category
            WHERE name = 'Informatique'
        ),
        2015
    ),
    (
        'Eloquent JavaScript',
        (
            SELECT id
            FROM publisher
            WHERE name = 'No Starch Press'
        ),
        (
            SELECT id
            FROM category
            WHERE name = 'Informatique'
        ),
        2018
    ),
    (
        'Le Seigneur des Anneaux',
        (
            SELECT id
            FROM publisher
            WHERE name = 'Gallimard'
        ),
        (
            SELECT id
            FROM category
            WHERE name = 'Fantasy'
        ),
        1954
    ),
    (
        '1984',
        (
            SELECT id
            FROM publisher
            WHERE name = 'Penguin Random House'
        ),
        (
            SELECT id
            FROM category
            WHERE name = 'Dystopie'
        ),
        1949
    ),
    (
        'Les Misérables',
        (
            SELECT id
            FROM publisher
            WHERE name = 'Hachette'
        ),
        (
            SELECT id
            FROM category
            WHERE name = 'Classique'
        ),
        1862
    ),
    (
        'The Pragmatic Programmer',
        (
            SELECT id
            FROM publisher
            WHERE name = 'Addison-Wesley'
        ),
        (
            SELECT id
            FROM category
            WHERE name = 'Informatique'
        ),
        1999
    ),
    (
        'Clean Code',
        (
            SELECT id
            FROM publisher
            WHERE name = 'Addison-Wesley'
        ),
        (
            SELECT id
            FROM category
            WHERE name = 'Informatique'
        ),
        2008
    );
INSERT INTO book_author (book_id, author_id)
SELECT b.id,
    a.id
FROM book b
    JOIN author a ON a.first_name = 'Martin'
    AND a.last_name = 'Kleppmann'
WHERE b.title = 'Designing Data-Intensive Applications';
INSERT INTO book_author (book_id, author_id)
SELECT b.id,
    a.id
FROM book b
    JOIN author a ON a.first_name = 'Al'
    AND a.last_name = 'Sweigart'
WHERE b.title = 'Automate the Boring Stuff with Python';
INSERT INTO book_author (book_id, author_id)
SELECT b.id,
    a.id
FROM book b
    JOIN author a ON a.first_name = 'Marijn'
    AND a.last_name = 'Haverbeke'
WHERE b.title = 'Eloquent JavaScript';
INSERT INTO book_author (book_id, author_id)
SELECT b.id,
    a.id
FROM book b
    JOIN author a ON a.first_name = 'J.R.R.'
    AND a.last_name = 'Tolkien'
WHERE b.title = 'Le Seigneur des Anneaux';
INSERT INTO book_author (book_id, author_id)
SELECT b.id,
    a.id
FROM book b
    JOIN author a ON a.first_name = 'George'
    AND a.last_name = 'Orwell'
WHERE b.title = '1984';
INSERT INTO book_author (book_id, author_id)
SELECT b.id,
    a.id
FROM book b
    JOIN author a ON a.first_name = 'Victor'
    AND a.last_name = 'Hugo'
WHERE b.title = 'Les Misérables';
INSERT INTO book_author (book_id, author_id)
SELECT b.id,
    a.id
FROM book b
    JOIN author a ON a.first_name = 'Andrew'
    AND a.last_name = 'Hunt'
WHERE b.title = 'The Pragmatic Programmer';
INSERT INTO book_author (book_id, author_id)
SELECT b.id,
    a.id
FROM book b
    JOIN author a ON a.first_name = 'David'
    AND a.last_name = 'Thomas'
WHERE b.title = 'The Pragmatic Programmer';
INSERT INTO book_author (book_id, author_id)
SELECT b.id,
    a.id
FROM book b
    JOIN author a ON a.first_name = 'Robert C.'
    AND a.last_name = 'Martin'
WHERE b.title = 'Clean Code';